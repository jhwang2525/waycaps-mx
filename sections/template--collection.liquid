{% liquid
    assign has_quick_view = false
%}

{% for block in section.blocks %}
    {% case block.type %}
        {% when 'quick-view' %}
            {% assign img_aspect_ratio = block.settings.quick-view-image-size %}
            {% assign enable_mobile_quick_view = block.settings.enable_on_mobile %}
            {% assign discount_display = block.settings.discount-display %}
            {% assign description_enabled = block.settings.show_product_description %}
            {% assign show_variant_labels = block.settings.show_variant_labels %}
            {% assign sold_out_variants_enabled = block.settings.show_sold_out_variants %}
            {% assign show_dynamic_checkout = block.settings.show_dynamic_checkout_button %}
            {% assign has_quick_view = true %}
            {% render 'quick-view-drawer' with variant_has_label: show_variant_labels %}
    {% endcase %}
{% endfor %}

<div class="collection-main--wrapper container">
    <section class="collection-filtering-section spaced-section">
        {%- liquid
            if section.settings.collection-sidebar-image != blank or section.settings.collection-sidebar-title != blank or section.settings.collection-sidebar-richtext != blank or section.settings.collection-sidebar-menu_title != blank or section.settings.collection-sidebar-linklist != blank
            assign has_sidebar_content = true
            else
            assign has_sidebar_content = false
            endif
        -%}
        
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        
        {% capture icon_caret %}
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon-caret" viewBox="0 0 10 6">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor">
            </svg>
        {% endcapture %}
        
        {% capture icon_close %}
            <svg  aria-hidden="true" focusable="false" role="presentation" width="12" height="13" class="icon-close-small" viewBox="0 0 12 13" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M8.48627 9.32917L2.82849 3.67098" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M2.88539 9.38504L8.42932 3.61524" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        {% endcapture %}
        
        <div data-wetheme-section-type="template--collection-filter-sort" data-wetheme-section-id="{{ section.id }}">
        
        {%- if section.settings.enable_filtering == true or section.settings.enable_sorting == true -%}
        {% assign color_langs = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' | join: ' ' %}
        <div class="collection-filters" id="main-collection-filters" data-id="{{ section.id }}">
            <button type="button" class="mobile-facets__open btn btn--large" data-drawer-open-btn>
            Filter / Sort
            </button>
        
            {%- assign total_active_values = 0 -%}
            <collection-filtering-form class="facets" data-filter-form{% if section.settings.enable_filtering %} data-has-filtering{% endif %}{% if section.settings.enable_sorting %} data-has-sorting{% else %} data-no-sorting{% endif %}{% if has_sidebar_content == false %} data-no-blocks{% endif %}>
                <form id="CollectionFiltersForm" class="facets__form">
                <div class="mobile-menu-close">
                    <button
                    type="button"
                    class="slide-menu menu-close-icon mobile-menu-close alt-focus drawer-close-btn"
                    aria-label="Close navigation"
                    data-drawer-close-btn
                    >
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x" aria-hidden="true"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
        
                <div class="facets__form-inner">
                    {% if section.settings.enable_filtering == true %}
                    <div class="facets__wrapper">
                        {%- unless collection.filters == empty -%}
                        <p class="facets__heading type-subheading type-subheading--1">{{ 'sections.collection_template.filter_by_label' | t }}</p>
                        {%- endunless -%}
        
                        {%- for filter in collection.filters -%}
                        {%- assign total_active_values = total_active_values | plus: filter.active_values.size -%}
                        {% case filter.type %}
                        {% when 'boolean' or 'list' %}
                            {% liquid 
                                assign isColor = false
                                assign file_extension = 'png'
                                assign downcased_label = filter.label | downcase
                                if color_langs contains downcased_label
                                    assign isColor = true
                                endif
                            %}
                            <details class="disclosure-has-popup facets__disclosure js-filter" data-index="{{ forloop.index }}">
                            <summary class="facets__summary">
                                <div>
                                <span>{{ filter.label | escape }}</span>
                                <span class="count-bubble">{%- if filter.active_values.size > 0 -%}{{ filter.active_values.size }}{%- endif -%}</span>
                                {{ icon_caret }}
                                </div>
                            </summary>
                            <div class="facets__display">
                                <div class="facets__header">
                                <span class="facets__selected no-js-hidden">{{ 'sections.collection_template.filters_selected' | t: count: filter.active_values.size }}</span>
                                <a href="{{ filter.url_to_remove }}" class="facets__reset link underlined-link js-facet-remove" >{{ 'sections.collection_template.reset' | t }}</a>
                                </div>
        
                                <ul class="facets__list list-unstyled" role="list">
                                {%- for value in filter.values -%}
                                    {% assign image_url = value.label | handle | append: '.' | append: file_extension | asset_url %}
                                    <li class="list-menu__item facets__item">
                                    <label for="Filter-{{ filter.label | escape }}-{{ forloop.index }}" class="facet-checkbox{% if value.count == 0 and value.active == false %} facet-checkbox--disabled{% endif %}">
                                        <input type="checkbox"
                                        name="{{ value.param_name }}"
                                        value="{{ value.value }}"
                                        id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                                        {% if value.active %}checked{% endif %}
                                        {% if value.count == 0 and value.active == false %}disabled{% endif %}
                                        {% if isColor %}data-swatch="true"{% endif %}   
                                        >
                                        
                                        {% unless isColor %}
                                            <svg width="16" height="16" viewBox="0 0 16 16" aria-hidden="true" focusable="false">
                                            <rect width="16" height="16" stroke="currentColor" fill="none" stroke-width="1"></rect>
                                            </svg>
            
                                            <svg class="icon-checkmark" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 9" fill="none" width="10px" height="10px">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M11.35.643a.5.5 0 01.006.707l-6.77 6.886a.5.5 0 01-.719-.006L.638 4.845a.5.5 0 11.724-.69l2.872 3.011 6.41-6.517a.5.5 0 01.707-.006h-.001z" fill="currentColor"/>
                                            </svg>
                                        {% else %}
                                            <div
                                                aria-hidden="true" 
                                                focusable="false"
                                                class="filter-swatch"
                                                {% if isColor %}style="background-color: {{ value.label }}; background-image: url({{ image_url }}); background-size: cover;"{% endif %}
                                            >
                                            </div>
                                        {% endunless %}
                                        {{ value.label | escape }} ({{ value.count }})
                                    </label>
                                    </li>
                                {%- endfor -%}
                                </ul>
                            </div>
                            </details>
                        {% when 'price_range' %}
                            {% liquid
                            assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND' | split: ','
                            assign uses_comma_decimals = false
                            if currencies_using_comma_decimals contains cart.currency.iso_code
                                assign uses_comma_decimals = true
                            endif
                            %}
                            <details class="disclosure-has-popup facets__disclosure js-filter" data-index="{{ forloop.index }}">
                            <summary class="facets__summary">
                                <div>
                                <span>{{ filter.label | escape }}</span>
                                <span class="count-bubble{%- if filter.min_value.value or filter.max_value.value -%}{{ filter.active_values.size }} count-bubble--dot{% endif %}"></span>
                                {{ icon_caret }}
                                </div>
                            </summary>
                            <div class="facets__display">
                                <div class="facets__header">
                                {%- assign max_price_amount = filter.range_max | money | escape -%}
                                <span class="facets__selected">{{ "sections.collection_template.max_price" | t: price: max_price_amount }}</span>
                                <a href="{{ filter.url_to_remove }}" class="facets__reset link underlined-link js-facet-remove" >{{ 'sections.collection_template.reset' | t }}</a>
                                </div>
                                <price-range-selector class="facets__price">
                                <div class="field">
                                    <span class="field__currency">{{ cart.currency.symbol }}</span>
                                    <input class="field__input"
                                    name="{{ filter.min_value.param_name }}"
                                    id="Filter-{{ filter.label | escape }}-{{ forloop.index }}-min_value"
                                    {%- if filter.min_value.value -%}
                                        {%- if uses_comma_decimals -%}
                                        value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                                        {%- else -%}
                                        value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                                        {% endif %}
                                    {%- endif -%}
                                    type="number"
                                    placeholder="0"
                                    min="0"
                                    max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">
                                    </input>
                                    <label class="field__label" for="Filter-{{ filter.label | escape }}-{{ forloop.index }}-min_value">{{ 'sections.collection_template.from' | t }}</label>
                                </div>
                                <div class="field">
                                    <span class="field__currency">{{ cart.currency.symbol }}</span>
                                    <input class="field__input"
                                    name="{{ filter.max_value.param_name }}"
                                    id="Filter-{{ filter.label | escape }}-{{ forloop.index }}-max_value"
                                    {%- if filter.max_value.value -%}
                                        {%- if uses_comma_decimals -%}
                                        value="{{ filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                                        {%- else -%}
                                        value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                                        {% endif %}
                                    {%- endif -%}
                                    type="number"
                                    placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                                    min="0"
                                    max="{{ filter.range_max | money_without_currency | replace: ',', '' }}">
                                    </input>
                                    <label class="field__label" for="Filter-{{ filter.label | escape }}-{{ forloop.index }}-max_value">{{ 'sections.collection_template.to' | t }}</label>
                                </div>
                                </div>
                            </price-range-selector>
                            </details>
                        {% endcase %}
                        {%- endfor -%}
                        <noscript>
                        <button type="submit" class="facets__button button">{{ 'sections.collection_template.filter_button' | t }}</button>
                        </noscript>
                    </div>
        
                    <div class="active-facets active-facets-desktop">
                        <a href="{{ collection.url }}?sort_by={{ sort_by }}" class="active-facets__button button button--secondary js-facet-remove">{{ 'sections.collection_template.clear_all' | t }}</a>
                        {%- for filter in collection.filters -%}
                            {% liquid 
                                assign isColor = false
                                assign file_extension = 'png'
                                assign downcased_label = filter.label | downcase
                                if color_langs contains downcased_label
                                assign isColor = true
                                endif
                            %}
                        {%- for value in filter.active_values -%}
                            <a class="active-facets__button active-facets__button--light button button--tertiary js-facet-remove" href="{{ value.url_to_remove }}" {% if isColor %}data-swatch="true"{% endif %}>
                            {% if filter.type == 'boolean' %}
                                {{ filter.label | escape | append: ': ' }}
                            {% endif %}

                            {% if isColor %}
                                {% assign image_url = value.label | handle | append: '.' | append: file_extension | asset_url %}

                                <div 
                                    aria-hidden="true" 
                                    focusable="false"
                                    class="color-icon"
                                    {% if isColor %}style="background-color: {{ value.label }}; background-image: url({{ image_url }}); background-size: cover;"{% endif %}
                                >
                                </div>
                            {% endif %}

                            {{ value.label | escape }}
                            {{ icon_close }}
                            </a>
                        {%- endfor -%}
                        {% if filter.type == "price_range" %}
                            {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                            <a class="active-facets__button active-facets__button--light button button--tertiary js-facet-remove" href="{{ filter.url_to_remove }}">
                                {%- if filter.min_value.value -%}{{ filter.min_value.value | money }}{%- else -%}{{ 0 | money }}{%- endif -%}-{%- if filter.max_value.value -%}{{ filter.max_value.value | money }}{%- else -%}{{ filter.range_max | money }}{%- endif -%}
                                {{ icon_close }}
                            </a>
                            {%- endif -%}
                        {% endif %}
                        {%- endfor -%}
                    </div>
                    {% endif %}
        
                    {% if collection.current_vendor or collection.current_type %}
                    <input type="hidden" name="q" value="{{ collection.current_vendor }}{{ collection.current_type }}">
                    {% endif %}
        
                    {%- if section.settings.enable_sorting == true -%}
                    <div class="collection-filters__item sorting">
                        <div class="collection-filters__field">
                        <label class="collection-filters__label type-subheading type-subheading--1" for="SortBy">{{ 'sections.collection_template.sort_by_label' | t }}</label>
                        <div class="select">
                            {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                            <select name="sort_by" class="select__select collection-filters__sort" id="SortBy" aria-describedby="a11y-refresh-page-message">
                            {%- for option in collection.sort_options -%}
                                <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                            {%- endfor -%}
                            </select>
                            {{ icon_caret }}
                        </div>
                        </div>
        
                        <noscript>
                        <button type="submit" class="button button--small">{{ 'sections.collection_template.sort_button' | t }}</button>
                        </noscript>
                    </div>
                    {%- endif -%}
                </div>
                </form>
            </collection-filtering-form>
        </div>
        
        <script src="{{ 'filtering.js' | asset_url }}" defer="defer"></script>
        {% endif %}
        
        {%- if section.settings.desktop_position == 'topbar' and section.settings.enable_filtering == false -%}
            <style>
            @media screen and (min-width: 769px) {
                .collection-filters__item {
                grid-column: 1 !important;
                }
        
                .collection-filters__field {
                flex-grow: 0 !important;
                }
            }
            </style>
        {% endif %}
        
        {%- if section.settings.desktop_position == 'topbar' -%}
            <style>
            @media screen and (max-width: 768px) {
                .collection-filters__item {
                margin-bottom: 30px;
                border-bottom: 1px solid var(--filter-border-color);
                padding-bottom: 30px;
                }
            }
        
            @media screen and (min-width: 769px) {
                .facets__disclosure:not(:last-of-type) {
                margin-right: 15px;
                }
            }
            </style>
        {% endif %}
        
        {%- if section.settings.desktop_position == 'sidebar' -%}
            <style>
            @media screen and (max-width: 768px) {
                .is-open .facets__form .collection-filters__item {
                padding-bottom: 30px;
                margin-bottom: 30px;
                border-bottom: 1px solid var(--filter-border-color);
                }
        
                .sidebar-wrapper-inner .collection-sidebar--section:not(:last-child) {
                padding-bottom: 15px;
                }
            }
        
            @media screen and (min-width: 769px) {
                .collection-filters__item {
                padding-bottom: 30px;
                }
        
                {% comment %} Text, menu {% endcomment %}
                .collection-sidebar--section {
                margin-bottom: 30px;
                padding-bottom: 30px;
                border-bottom: 1px solid var(--filter-border-color);
                }
        
                .collection-filtering-section {
                width: 30%;
                padding-top: 30px;
								{% unless section.settings.enable_filtering or section.settings.enable_sorting %}
									display: none;
								{% endunless %}
                }
        
                .collection-filters__label {
                margin: 0 0 1rem;
                }
        
                .sidebar-wrapper-inner:not([data-no-filter-sort]) .collection-sidebar--section:first-child {
                padding-top: 30px;
                }
        
                .collection-sidebar--section:last-child {
                border-bottom: none;
                }
        
                .collection-filtering-section {
                width: 30%;
                padding-top: 30px;
                }
        
                a.active-facets__button {
                margin: 0 0 1rem 1rem;
                }
        
                .collection-grid-wrapper {
                padding-left: var(--column-gap-width);
								{% if section.settings.enable_filtering or section.settings.enable_sorting %}
                	width: 70%;
								{% else %}
									width: 100%;
								{% endif %}
                }
        
                [data-filter-form]:not([data-no-blocks]) .facets__form-inner {
                border-bottom: 1px solid var(--filter-border-color);
                }
        
                [data-has-sorting] .facets__wrapper {
                padding-top: 30px;
                border-top: 1px solid var(--filter-border-color);
                }
            }
        
            .shopify-section:not(.collection-header-wrapper):not(.collection-sidebar-wrapper):not(.collection-filtering-section):not(.collection-grid-wrapper) {
                width: 100%;
            }
        
            .facets__form-inner {
                display: flex !important;
                flex-direction: column-reverse;
            }
        
            .facets__wrapper {
                display: block !important;
            }
            </style>
        
            {% if has_sidebar_content == false %}
            <style>
                .collection-sidebar-wrapper {
                display: none;
                }
            </style>
            {% endif %}
        
            {% if has_sidebar_content %}        
                {% assign no_filter_sort = false %}
                {% if section.settings.enable_filtering == false and section.settings.enable_sorting == false %}
                    {% assign no_filter_sort = true %}
                {% endif %}
            
                <aside class="sidebar-wrapper-inner" id="collection-sidebar"{% if no_filter_sort %} data-no-filter-sort{% endif %}>
            
                    {% if section.settings.collection-sidebar-image %}
                    <div class="collection-sidebar--section">
                        {% if section.settings.collection-sidebar-link %}
                        <a href="{{ section.settings.collection-sidebar-link }}" itemprop="url">
                        {% endif %}
                        <div>
                        {% assign alt = section.settings.collection-sidebar-image.alt | default: shop.name %}
                        {% render 'responsive-image' with section.settings.collection-sidebar-image, alt: alt %}
                        </div>
                        {% if section.settings.collection-sidebar-link %}
                        </a>
                        {% endif %}
                    </div>
                    {% endif %}
            
                    {% if section.settings.collection-sidebar-title != blank or section.settings.collection-sidebar-richtext != blank %}
                    <div class="collection-sidebar--section">
                        <h2 class="type-subheading type-subheading--1">{{ section.settings.collection-sidebar-title }}</h2>
            
                        {% if section.settings.collection-sidebar-richtext != blank %}
                        <svg class="chevron-right global-transition" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-right"><polyline points="9 18 15 12 9 6"></polyline></svg>
                        <div class="collection--sidebar--text--richtext">
                            {{ section.settings.collection-sidebar-richtext }}
                        </div>
                        {% endif %}
                    </div>
                    {% endif %}
            
                    {% if section.settings.collection-sidebar-linklist != blank or section.settings.collection-sidebar-menu_title != blank %}
                    {%- assign collection_linklist = section.settings.collection-sidebar-linklist -%}
                    <div class="collection-sidebar--section">
                        <h2 class="type-subheading type-subheading--1">{{ section.settings.collection-sidebar-menu_title | escape }}</h2>
                        {% if linklists[collection_linklist].links.size > 0 %}
                        <svg class="chevron-right global-transition" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-right"><polyline points="9 18 15 12 9 6"></polyline></svg>
                        <ul>
                        {% for link in linklists[collection_linklist].links %}
                            <li class="collection-menu--list-item{% if link.object.tags and link.object.tags.size > 0 %} children{% endif %}">
                            <a href="{{link.url}}">{{link.title}}</a>
                            </li>
                        {% endfor %}
                        </ul>
                        {% endif %}
                    </div>
                    {% endif %}
            
                </aside>
        
            {% endif %}
        {%- endif -%}
        </div>
    </section>

    <div class="collection-grid-wrapper">
        {%- assign limit = section.settings.grid | times: section.settings.rows -%}
        {% paginate collection.products by limit %}
        <div id="CollectionProductGrid" data-section-id="{{ section.id }}" data-wetheme-section-type="template--collection" data-wetheme-section-id="{{ section.id }}">
            <div class="page-width" id="Collection">
                {%- assign is_empty_collection = false -%}
                {% case section.settings.grid %}
                    {% when 2 %}
                    {%- assign grid_item_width = 'two-col-grid' -%}
                    {%- assign grid_image_width = '600x600' -%}
                    {% when 3 %}
                    {%- assign grid_item_width = 'three-col-grid' -%}
                    {%- assign grid_image_width = '600x600' -%}
                    {% when 4 %}
                    {%- assign grid_item_width = 'four-col-grid' -%}
                    {%- assign grid_image_width = '600x600' -%}
                        {% when 5 %}
                        {%- assign grid_item_width = 'five-col-grid' -%}
                    {%- assign grid_image_width = '600x600' -%}
                        {% when 6 %}
                    {%- assign grid_item_width = 'six-col-grid' -%}
                    {%- assign grid_image_width = '600x600' -%}
                {% endcase %}
                {%- capture olclasses -%}
                    {%- case section.settings.grid -%}
                        {%- when 2 -%}
                            {% cycle 'mobileCycle': ' alpha mobile-clear tablet-clear', ' omega' %} wow fadeInUp {% cycle 'animDelay': '', 'delay-1' %}
                        {%- when 3 -%}
                            {% cycle 'mobileCycle': ' alpha mobile-clear', '', ' mobile-clear omega', 'alpha', ' mobile-clear', ' omega' %} wow fadeInUp {% cycle 'animDelay': '', 'delay-1', 'delay-2' %}
                        {%- when 4 -%}
                            {% cycle 'mobileCycle': ' alpha mobile-clear tablet-clear', '', ' mobile-clear tablet-clear', ' omega' %} wow fadeInUp {% cycle 'animDelay': '', 'delay-1', 'delay-2', 'delay-3' %}
                        {%- when 5 -%}
                            {% cycle 'mobileCycle': ' alpha mobile-clear tablet-clear', '', ' mobile-clear tablet-clear', '', ' omega mobile-clear tablet-clear', ' alpha', ' mobile-clear tablet-clear', '', ' mobile-clear tablet-clear', ' omega' %} wow fadeInUp {% cycle 'animDelay': '', 'delay-1', 'delay-2', 'delay-3', 'delay-4' %}
                        {%- when 6 -%}
                            {% cycle 'mobileCycle': ' alpha mobile-clear tablet-clear', '', ' mobile-clear', ' tablet-clear', ' mobile-clear', ' omega' %} wow fadeInUp {% cycle 'animDelay': '', 'delay-1', 'delay-2', 'delay-3', 'delay-4', 'delay-5' %}
                    {%- endcase -%}
                {%- endcapture -%}
                <div id="AjaxinateContainer" class="clearfix{% if settings.product-grid != 'natural' %} has-aspect-ratio{% else %} natural-images{% endif %}">
                    <ol class="grid__item product-grid {{ grid_item_width }} indiv-product-wrapper collection-image-anim {{ olclasses }}" data-grid-id="{{section.id}}"
                    id="template--collection">
                        {% for product in collection.products %}
                            <li>
                                {%-
                                    render 'product-grid--indiv-product',
                                    liquidObject: product,
                                    quick_view_aspect_ratio: img_aspect_ratio,
                                    show_quick_view_on_mobile: enable_mobile_quick_view,
                                    quick_view_enabled: has_quick_view,
                                    discount_display: discount_display,
                                    description_enabled: description_enabled,
                                    variant_labels_enabled: show_variant_labels,
                                    show_sold_out_variants: sold_out_variants_enabled,
                                    show_dynamic_checkout: show_dynamic_checkout
                                -%}
                            </li>
                        {% else %}
                            {% comment %}
                            Add default products to help with onboarding for collections/all only.
                            The onboarding styles and products are only loaded if the
                            store has no products.
                            {% endcomment %}
                            {% if collection.handle == 'all' and collection.all_vendors.size == 0 and collection.all_types.size == 0 %}
                                {% for i in (1..8) %}
                                    {%- capture alphaclasses -%}
                                        {%- case section.settings.grid -%}
                                        {%- when 2 -%}
                                            {% cycle 'alpha', 'omega' %}
                                        {%- when 3 -%}
                                            {% cycle ' alpha', '', ' omega' %}
                                        {%- when 4 -%}
                                            {% cycle ' alpha', '', '', ' omega' %}
                                        {%- when 5 -%}
                                            {% cycle ' alpha', '', '', '', ' omega' %}
                                        {%- when 6 -%}
                                            {% cycle ' alpha', '', '', '', '', ' omega' %}
                                        {%- endcase -%}
                                    {%- endcapture -%}
                                    <div class="grid__item {{ grid_item_width }} indiv-product-wrapper {{ alphaclasses }}">
                                        {% render 'product-grid--onboarding' %}
                                    </div>
                                {% endfor %}
                            {% else %}
                                {%- assign is_empty_collection = true -%}
                            {% endif %}
                        {% endfor %}
                    </ol>
                </div>
                {% if is_empty_collection %}
                <div class="grid__item small--text-center">
                    <p class="text-center">{{ 'collections.general.no_matches' | t }}</p>
                </div>
                {% endif %}
                {% if paginate.pages > 1 %}
                    <div class="collection-pagination justify-content-center">
                        {% if section.settings.pagination_type == 'paged_navigation' %}
                        {% render 'pagination', paginate: paginate  %}
                        {% elsif section.settings.pagination_type == 'infinite_scrolling' %}
                        <div id="AjaxinateInfiniteScrolling">
                            {% if paginate.next %}
                            <a href="{{ paginate.next.url }}">{{ 'collections.paginate.infinite_scrolling' | t }}</a>
                            {% endif %}
                        </div>
                        {% else %}
                        <div id="AjaxinateLoadMore">
                            {% if paginate.next %}
                            <a class="btn" href="{{ paginate.next.url }}">{{ 'collections.paginate.load_more' | t }}</a>
                            {% endif %}
                        </div>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
        </div>
        {% endpaginate %}
        {% if has_collection_image %}
            <style>
            #main-navigation-wrapper{
                margin-bottom: 0px;
            }
            </style>
        {% endif %}

        <style>
            
        </style>

    </div>
</div>
{% schema %}
{
    "name": {
        "en": "Collection grid"
    },
    "settings": [
        {
          "type": "paragraph",
          "content": "To change your grid image size go to Theme settings > Product grids > Grid image size"
        },
        {
            "type": "range",
            "id": "grid",
            "min": 2,
            "max": 6,
            "step": 1,
            "label": {
                "en": "Products per row",
                "de": "Produkte pro Zeile",
                "es": "Productos por fila",
                "fr": "Produits par ligne",
                "pt-PT": "Produtos por linha"
            },
            "default": 4
        },
        {
            "type": "range",
            "id": "rows",
            "min": 3,
            "max": 8,
            "step": 1,
            "label": {
                "en": "Rows per page",
                "de": "Zeilen pro Seite",
                "es": "Filas por página",
                "fr": "Nombre de lignes par page",
                "pt-PT": "Linhas por página"
            },
            "default": 3
        },
        {
            "type": "header",
            "content": {
                "en": "Pagination"
            }
        },
        {
            "type": "select",
            "id": "pagination_type",
            "label": {
                "en": "Pagination type",
                "de": "Seitenzählungsart",
                "es": "Tipo de paginación",
                "fr": "Type de pagination",
                "pt-PT": "Tipo de paginação"
            },
            "default": "paged_navigation",
            "options": [
                {
                    "value": "paged_navigation",
                    "label": {
                        "en": "Paged navigation",
                        "de": "Seitennummerierte Navigation",
                        "es": "Navegación por páginas",
                        "fr": "Navigation paginée",
                        "pt-PT": "Navegação paginada"
                    }
                },
                {
                    "value": "infinite_scrolling",
                    "label": {
                        "en": "Infinite scrolling",
                        "de": "Unendliches Scrolling",
                        "es": "Desplazamiento continuo",
                        "fr": "Défilé infini",
                        "pt-PT": "Rolagem infinita"
                    }
                },
                {
                    "value": "load_more",
                    "label": {
                        "en": "Load more button",
                        "de": "Schaltfläche 'Mehr anzeigen'",
                        "es": "Cargar más botones",
                        "fr": "Bouton Charger plus",
                        "pt-PT": "Carregar mais botão"
                    }
                }
            ]
        },
        {
            "type": "header",
            "content": "Filtering and sorting"
        },
        {
            "type": "select",
            "id": "desktop_position",
            "options": [
                {
                    "value": "topbar",
                    "label": "Top bar"
                },
                {
                    "value": "sidebar",
                    "label": "Sidebar"
                }
            ],
            "default": "topbar",
            "label": "Desktop position"
        },
        {
            "type": "checkbox",
            "id": "enable_filtering",
            "default": true,
            "label": "Show filtering",
            "info": "[Customize filters](/admin/menus)"
        },
        {
            "type": "checkbox",
            "id": "enable_sorting",
            "default": true,
            "label": "Show sorting"
        },
        {
            "type": "header",
            "content": "Sidebar"
        },
        {
            "type": "paragraph",
            "content": "When the filter and sort toolbar position is set to 'Sidebar', the following additional content can be added to the sidebar."
        },
        {
            "type": "image_picker",
            "id": "collection-sidebar-image",
            "label": {
                "en": "Image",
                "de": "Bild",
                "es": "Imagen",
                "fr": "Image",
                "pt-PT": "Imagem"
            },
            "info": {
                "en": "300 x 150px recommended",
                "de": "300 x 150 px empfohlen",
                "es": "Recomendado 300 x 150 px",
                "fr": "300 x 150 px recommandé",
                "pt-PT": "300 x 150px, recomendado"
            }
        },
        {
            "type": "url",
            "id": "collection-sidebar-link",
            "label": "Image link",
            "info": {
                "en": "Optional",
                "de": "Optional",
                "es": "Opcional",
                "fr": "Facultatif",
                "pt-PT": "Opcional"
            }
        },
        {
            "type": "text",
            "id": "collection-sidebar-title",
            "label": {
                "en": "Heading",
                "de": "Überschrift",
                "es": "Encabezado",
                "fr": "Rubrique",
                "pt-PT": "Título"
            }
        },
        {
            "type": "richtext",
            "id": "collection-sidebar-richtext",
            "label": {
                "en": "Text",
                "de": "Text",
                "es": "Texto",
                "fr": "Texte",
                "pt-PT": "Texto"
            }
        },
        {
            "type": "text",
            "id": "collection-sidebar-menu_title",
            "label": "Navgiation heading"
        },
        {
            "type": "link_list",
            "id": "collection-sidebar-linklist",
            "label": {
                "en": "Navigation",
                "de": "Navigation",
                "es": "Navegación",
                "fr": "Navigation",
                "pt-PT": "Navegação"
            }
        }
    ],
    "blocks": [
        {
            "name": "Grid card vendor",
            "type": "grid-card-vendor",
            "limit": 1,
            "settings": [
                {
                    "type": "paragraph",
                    "content": "This block determines the position of the product grid item vendor."
                }
            ]
        },
        {
            "name": "Grid card heading",
            "type": "grid-card-title",
            "limit": 1,
            "settings": [
                {
                    "type": "paragraph",
                    "content": "This block determines the position of the product grid item heading."
                }
            ]
        },
        {
            "name": "Grid card price",
            "type": "grid-card-price",
            "limit": 1,
            "settings": [
                {
                    "type": "paragraph",
                    "content": "This block determines the position of the product grid item price."
                }
            ]
        },
        {
            "name": "Grid card swatches",
            "type": "grid-card-swatches",
            "limit": 1,
            "settings": [
                {
                    "type": "paragraph",
                    "content": "This block determines the position of the product grid item swatches."
                }
            ]
        },
        {
            "name": "Quick view",
            "type": "quick-view",
            "limit": 1,
            "settings": [
                {
                    "type": "header",
                    "content": {
                        "en": "Media",
                        "de": "Medien",
                        "es": "Medios",
                        "fr": "Médias",
                        "pt-PT": "Mídia"
                    }
                    },
                    {
                    "type": "select",
                    "id": "quick-view-image-size",
                    "label": {
                        "en": "Image size",
                        "de": "Bildgröße",
                        "es": "Tamaño de la imagen",
                        "fr": "Taille de l'image",
                        "pt-PT": "Tamanho da imagem"
                    },
                    "default": "square",
                    "options": [
                        {
                        "value": "natural",
                        "label": {
                            "en": "Natural",
                            "fr": "Naturel",
                            "de": "Natürlich",
                            "es": "Natural",
                            "pt-PT": "Natural"
                        }
                        },
                        {
                        "value": "square",
                        "label": {
                            "en": "Square (1:1)",
                            "fr": "Carré (1: 1)",
                            "de": "Quadrat (1:1)",
                            "es": "Cuadrado (1:1)",
                            "pt-PT": "Quadrado (1:1)"
                        }
                        },
                        {
                        "value": "tall",
                        "label": {
                            "en": "Tall (2:3)",
                            "fr": "Grand (2: 3)",
                            "de": "Groß (2:3)",
                            "es": "Vertical (2:3)",
                            "pt-PT": "Estreito (2:3)"
                        }
                        },
                        {
                        "value": "wide",
                        "label": {
                            "en": "Wide (4:3)",
                            "fr": "Large (4: 3)",
                            "de": "Weit (4:3)",
                            "es": "Ancho (4:3)",
                            "pt-PT": "Largo (4:3)"
                        }
                        }
                    ]
                    },
                    {
                    "type": "header",
                    "content": {
                        "en": "Content",
                        "de": "Inhalt",
                        "es": "Contenido",
                        "fr": "Contenu",
                        "pt-PT": "Conteúdo"
                    }
                },
                {
                    "type": "radio",
                    "id": "discount-display",
                    "label": "Discount display",
                    "default": "hide",
                    "options": [
                        {
                            "value": "percentage",
                            "label": "Percentage"
                        },
                        {
                            "value": "value",
                            "label": "Value"
                        },
                        {
                            "value": "hide",
                            "label": "Hide"
                        }
                    ]
                },
                {
                    "type": "checkbox",
                    "id": "show_product_description",
                    "label": "Show product description",
                    "default": true
                },
                {
                    "type": "checkbox",
                    "id": "show_variant_labels",
                    "label": "Show variant labels",
                    "default": true
                },
                {
                    "type": "checkbox",
                    "id": "show_sold_out_variants",
                    "label": "Show out of stock variants",
                    "default": true,
                    "info": {
                        "en": "This setting only applies to products with a single set of variant options.",
                        "de": "Diese Einstellung gilt nur für Produkte mit einer einzigen Variantenoption.",
                        "es": "Esta configuración solo se aplica a los productos con un solo conjunto de opciones de variante.",
                        "fr": "Ce paramètre s'applique uniquement aux produits avec un seul ensemble d'options de variante.",
                        "pt-PT": "Esta configuração só se aplica a produtos com um único conjunto de opções de variante."
                    }
                },
                {
                    "type": "checkbox",
                    "id": "show_dynamic_checkout_button",
                    "label": "Show dynamic checkout button",
                    "default": true
                },
                {
                    "type": "checkbox",
                    "id": "enable_on_mobile",
                    "label": "Enable on small screen sizes",
                    "default": true
                }                  
            ]
        }
    ]
}
{% endschema %}